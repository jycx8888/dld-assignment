{
    "elements": [{
        "elements": [{
            "elements": [
                {
                    "className": "org.joget.apps.form.lib.SelectBox",
                    "properties": {
                        "controlField": "",
                        "readonly": "",
                        "size": "",
                        "optionsBinder": {
                            "className": "org.joget.apps.form.lib.FormOptionsBinder",
                            "properties": {
                                "addEmptyOption": "",
                                "groupingColumn": "",
                                "useAjax": "",
                                "formDefId": "adminAddFacility",
                                "labelColumn": "newFacilityName",
                                "extraCondition": "",
                                "cacheInterval": "",
                                "emptyLabel": "",
                                "idColumn": "newFacilityName"
                            }
                        },
                        "multiple": "",
                        "options": [],
                        "validator": {
                            "className": "org.joget.apps.form.lib.DefaultValidator",
                            "properties": {
                                "type": "",
                                "message": "",
                                "mandatory": "true"
                            }
                        },
                        "workflowVariable": "",
                        "label": "Facility Name",
                        "id": "facilityName",
                        "value": "",
                        "readonlyLabel": ""
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.DatePicker",
                    "properties": {
                        "permissionHidden": "",
                        "yearRange": "c-10:c+10",
                        "dataFormat": "yyyy-MM-dd",
                        "startDateFieldId": "",
                        "validator": {
                            "className": "org.joget.apps.form.lib.DefaultValidator",
                            "properties": {
                                "type": "",
                                "message": "",
                                "mandatory": "true"
                            }
                        },
                        "format": "",
                        "label": "Date",
                        "datePickerType": "",
                        "currentDateAs": "minDate",
                        "endDateFieldId": "",
                        "readonly": "",
                        "allowManual": "true",
                        "workflowVariable": "",
                        "id": "date",
                        "placeholder": "",
                        "disableWeekends": "",
                        "value": "",
                        "readonlyLabel": "",
                        "format24hr": ""
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.DatePicker",
                    "properties": {
                        "yearRange": "c-10:c+10",
                        "dataFormat": "yyyy-MM-dd",
                        "startDateFieldId": "",
                        "validator": {
                            "className": "org.joget.apps.form.lib.DefaultValidator",
                            "properties": {
                                "type": "",
                                "message": "",
                                "mandatory": "true"
                            }
                        },
                        "label": "Time",
                        "datePickerType": "timeOnly",
                        "currentDateAs": "",
                        "endDateFieldId": "",
                        "readonly": "",
                        "allowManual": "",
                        "workflowVariable": "",
                        "id": "time",
                        "placeholder": "",
                        "disableWeekends": "",
                        "value": "",
                        "readonlyLabel": "",
                        "format24hr": ""
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.TextField",
                    "properties": {
                        "requiredSanitize": "",
                        "maxlength": "",
                        "validator": {
                            "className": "org.joget.apps.form.lib.DefaultValidator",
                            "properties": {
                                "type": "",
                                "message": "",
                                "mandatory": "true"
                            }
                        },
                        "label": "No. of Participants",
                        "disableIncrementDecrementArrow": "",
                        "encryption": "",
                        "readonly": "",
                        "size": "",
                        "workflowVariable": "",
                        "style": "",
                        "id": "noOfParticipants",
                        "placeholder": "",
                        "value": "",
                        "readonlyLabel": "",
                        "storeNumeric": ""
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.TextArea",
                    "properties": {
                        "requiredSanitize": "",
                        "readonly": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "workflowVariable": "",
                        "label": "Special Request",
                        "id": "specialRequest",
                        "placeholder": "",
                        "rows": "5",
                        "cols": "20",
                        "value": "",
                        "readonlyLabel": ""
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.CheckBox",
                    "properties": {
                        "fullWidth": "",
                        "controlField": "",
                        "readonly": "",
                        "optionsBinder": {
                            "className": "",
                            "properties": {}
                        },
                        "options": [{
                            "label": "Agree",
                            "value": "Agree",
                            "grouping": "a"
                        }],
                        "validator": {
                            "className": "org.joget.apps.form.lib.DefaultValidator",
                            "properties": {
                                "type": "",
                                "message": "",
                                "mandatory": "true"
                            }
                        },
                        "workflowVariable": "",
                        "label": "Terms Agreement",
                        "id": "termsAgreement",
                        "value": "",
                        "readonlyLabel": ""
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.CustomHTML",
                    "properties": {
                        "requiredSanitize": "",
                        "autoPopulate": "",
                        "label": "",
                        "id": "field9",
                        "value": "<script>\r\n    function applyModernBookingTheme() {\r\n    const styleId = 'modernBookingThemeStyle';\r\n    let styleTag = document.getElementById(styleId);\r\n\r\n    if (!styleTag) {\r\n        styleTag = document.createElement('style');\r\n        styleTag.id = styleId;\r\n        document.head.appendChild(styleTag);\r\n    }\r\n\r\n    styleTag.textContent = `\r\n        /* --- General Resets & Body Background --- */\r\n        body {\r\n            background-color: #F8F9FA; /* Very light grey background for the entire page */\r\n            font-family: 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\r\n            color: #333333;\r\n        }\r\n\r\n        /* --- Top Header Bar --- */\r\n        /* Assuming the top bar is the first child of body or similar structure */\r\n        .header-top, .header-blue-bar { /* Added common class names for the top bar */\r\n            background-color: #4A90E2 !important; /* Muted blue */\r\n            color: #FFFFFF !important;\r\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n        }\r\n        /* Adjusting specific elements within the top bar if needed */\r\n        .header-top .title, .header-blue-bar .date {\r\n            color: #FFFFFF;\r\n        }\r\n\r\n        /* --- Left Navigation Sidebar --- */\r\n        .sidebar, .nav-sidebar { /* Assuming a class for the sidebar */\r\n            background-color: #FFFFFF !important; /* Clean white */\r\n            border-right: 1px solid #DDDDDD;\r\n            box-shadow: 2px 0 5px rgba(0,0,0,0.05);\r\n            padding-top: 20px; /* Add some padding if needed */\r\n        }\r\n        .sidebar-header, .sidebar-admin-info { /* 'Admin Admin' section */\r\n            padding: 15px 20px;\r\n            border-bottom: 1px solid #EEEEEE;\r\n            display: flex;\r\n            align-items: center;\r\n            color: #333333;\r\n        }\r\n        .sidebar-header .icon, .sidebar-admin-info .icon {\r\n            color: #4A90E2;\r\n            margin-right: 10px;\r\n        }\r\n        .sidebar ul li a { /* Navigation links */\r\n            color: #333333; /* Darker text for links */\r\n            padding: 12px 20px;\r\n            display: block;\r\n            text-decoration: none;\r\n            transition: background-color 0.2s ease, color 0.2s ease;\r\n        }\r\n        .sidebar ul li a:hover,\r\n        .sidebar ul li a.active { /* Active link or hover state */\r\n            background-color: #E6F2FF; /* Light blue */\r\n            color: #4A90E2; /* Muted blue */\r\n            border-left: 4px solid #4A90E2; /* Accent border */\r\n            padding-left: 16px; /* Adjust padding due to border */\r\n        }\r\n        /* Specific for the \"10\" notification bubble */\r\n        .sidebar .notification-badge {\r\n            background-color: #F44336; /* Red for notifications */\r\n            color: white;\r\n            border-radius: 50%;\r\n            padding: 3px 7px;\r\n            font-size: 0.7em;\r\n            margin-left: 5px;\r\n        }\r\n\r\n        /* --- Main Content Area (Form Container) --- */\r\n        .content-area, .main-content-wrapper { /* General content wrapper */\r\n            background-color: #F8F9FA; /* Matches body background */\r\n            padding: 30px;\r\n        }\r\n        .form-container, .card, .panel { /* The white card containing the form */\r\n            background-color: #FFFFFF !important; /* Clean white */\r\n            border-radius: 8px;\r\n            box-shadow: 0 4px 15px rgba(0,0,0,0.08); /* More pronounced shadow */\r\n            padding: 30px;\r\n            margin-bottom: 20px;\r\n        }\r\n        .form-header, .section-header { /* \"Facility Booking\" title in the form */\r\n            background-color: #4A90E2 !important; /* Muted blue */\r\n            color: #FFFFFF !important;\r\n            padding: 15px 25px;\r\n            margin: -30px -30px 20px -30px; /* Adjust to sit at top of card */\r\n            border-top-left-radius: 8px;\r\n            border-top-right-radius: 8px;\r\n            font-size: 1.2em;\r\n            font-weight: 600;\r\n        }\r\n        .form-header h2, .section-header h2 {\r\n             color: #FFFFFF; /* Ensure header text is white */\r\n        }\r\n\r\n\r\n        /* --- Form Elements --- */\r\n        .form-group label {\r\n            color: #555555; /* Slightly darker grey for labels */\r\n            font-weight: 500;\r\n            margin-bottom: 8px;\r\n            display: block;\r\n        }\r\n        .form-group label.required::after { /* Red asterisk for required fields */\r\n            content: ' *';\r\n            color: #E74C3C;\r\n            margin-left: 3px;\r\n        }\r\n        .form-control, .form-input, select { /* Input fields and dropdowns */\r\n            width: 100%;\r\n            padding: 10px 15px;\r\n            border: 1px solid #DDDDDD; /* Light grey border */\r\n            border-radius: 5px;\r\n            font-size: 1em;\r\n            color: #333333;\r\n            box-sizing: border-box; /* Include padding and border in element's total width and height */\r\n            transition: border-color 0.2s ease, box-shadow 0.2s ease;\r\n        }\r\n        .form-control:focus, .form-input:focus, select:focus {\r\n            border-color: #4A90E2; /* Blue on focus */\r\n            box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.2); /* Soft blue glow */\r\n            outline: none;\r\n        }\r\n        textarea.form-control {\r\n            min-height: 100px;\r\n            resize: vertical;\r\n        }\r\n        .checkbox-label { /* \"Agree\" checkbox label */\r\n            display: flex;\r\n            align-items: center;\r\n            cursor: pointer;\r\n            color: #555555;\r\n            margin-top: 20px;\r\n        }\r\n        .checkbox-label input[type=\"checkbox\"] {\r\n            margin-right: 8px;\r\n            /* Further styling for custom checkbox appearance could go here */\r\n        }\r\n\r\n        /* --- Buttons --- */\r\n        .btn { /* General button style */\r\n            padding: 12px 25px;\r\n            border: none;\r\n            border-radius: 5px;\r\n            cursor: pointer;\r\n            font-size: 1em;\r\n            font-weight: 600;\r\n            transition: background-color 0.2s ease, box-shadow 0.2s ease;\r\n            margin-right: 10px; /* Space between buttons */\r\n        }\r\n        .btn-primary, .btn-complete { /* \"Complete\" button */\r\n            background-color: #4CAF50; /* Green */\r\n            color: #FFFFFF;\r\n        }\r\n        .btn-primary:hover, .btn-complete:hover {\r\n            background-color: #43A047; /* Darker green on hover */\r\n            box-shadow: 0 2px 8px rgba(0, 128, 0, 0.2);\r\n        }\r\n        .btn-secondary, .btn-save-draft { /* \"Save As Draft\" button */\r\n            background-color: #6C757D; /* Grey */\r\n            color: #FFFFFF;\r\n        }\r\n        .btn-secondary:hover, .btn-save-draft:hover {\r\n            background-color: #5A6268; /* Darker grey on hover */\r\n            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n        }\r\n\r\n        /* --- Date/Time Pickers (assuming they are calendar icons) --- */\r\n        .calendar-icon, .time-icon {\r\n            color: #6C757D; /* Grey icon */\r\n            font-size: 1.2em;\r\n            cursor: pointer;\r\n            margin-left: 5px;\r\n        }\r\n        .calendar-icon:hover, .time-icon:hover {\r\n            color: #4A90E2; /* Blue on hover */\r\n        }\r\n\r\n        /* --- Breadcrumbs / Page Title --- */\r\n        .breadcrumb, .page-title-bar {\r\n            background-color: transparent;\r\n            padding: 0 0 20px 0;\r\n            color: #666666;\r\n            font-size: 0.95em;\r\n        }\r\n        .breadcrumb a {\r\n            color: #4A90E2;\r\n            text-decoration: none;\r\n        }\r\n        .breadcrumb a:hover {\r\n            text-decoration: underline;\r\n        }\r\n        .breadcrumb span {\r\n            color: #333333;\r\n            font-weight: 600;\r\n        }\r\n        .page-header h1 {\r\n            color: #333333;\r\n            font-size: 1.8em;\r\n            margin-bottom: 15px;\r\n        }\r\n\r\n        /* --- General UI Elements (if present) --- */\r\n        .panel-heading, .widget-header { /* If there are other panel headers */\r\n            background-color: #F0F3F7; /* Light grey */\r\n            color: #333333;\r\n            padding: 10px 15px;\r\n            border-bottom: 1px solid #DDDDDD;\r\n            font-weight: 600;\r\n            border-top-left-radius: 8px;\r\n            border-top-right-radius: 8px;\r\n        }\r\n\r\n        /* Scrollbar Styling (Modern) */\r\n        ::-webkit-scrollbar {\r\n            width: 8px;\r\n            height: 8px;\r\n        }\r\n        ::-webkit-scrollbar-track {\r\n            background: #f1f1f1;\r\n            border-radius: 10px;\r\n        }\r\n        ::-webkit-scrollbar-thumb {\r\n            background: #888;\r\n            border-radius: 10px;\r\n        }\r\n        ::-webkit-scrollbar-thumb:hover {\r\n            background: #555;\r\n        }\r\n    `;\r\n\r\n    console.log(\"Modern booking theme applied.\");\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', applyModernBookingTheme);\r\n<\/script>"
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.CustomHTML",
                    "properties": {
                        "requiredSanitize": "",
                        "autoPopulate": "",
                        "label": "",
                        "id": "field6",
                        "value": "<script>\r\n$(document).ready(function () {\r\n    const durations = {\r\n        \"BBQ Pit\": 4,\r\n        \"Multipurpose Hall\": 6,\r\n        \"Meeting Room\": 3,\r\n        \"Sauna\": 1,\r\n        \"Pickleball Court\": 2\r\n    };\r\n\r\n    function getHour(dateTimeStr) {\r\n        const d = new Date(dateTimeStr);\r\n        return d.getHours();\r\n    }\r\n\r\n    function pad(n) {\r\n        return n < 10 ? \"0\" + n : n;\r\n    }\r\n\r\n    function addHours(dateTimeStr, hours) {\r\n        const d = new Date(dateTimeStr);\r\n        d.setHours(d.getHours() + hours);\r\n        return pad(d.getHours()) + \":\" + pad(d.getMinutes());\r\n    }\r\n\r\n    // Force user to choose hour only (no minutes)\r\n    $(\"#dateAndTime\").on(\"change\", function () {\r\n        let raw = $(this).val();\r\n        if (!raw) return;\r\n\r\n        let date = new Date(raw);\r\n        let h = date.getHours();\r\n\r\n        if (h < 10 || h > 21) {\r\n            alert(\"Time must be between 10:00 AM and 9:00 PM.\");\r\n            $(this).val('');\r\n            $(\"#auto_end_display\").html(\"\");\r\n            return;\r\n        }\r\n\r\n        // Force minutes = 00\r\n        date.setMinutes(0);\r\n        let iso = date.toISOString().slice(0, 16);\r\n        $(this).val(iso); // format: YYYY-MM-DDTHH:mm\r\n\r\n        const facility = $(\"#facilityName\").val();\r\n        if (facility && durations[facility]) {\r\n            const end = addHours(date, durations[facility]);\r\n            $(\"#auto_end_display\").html(\"End Time: \" + end);\r\n        }\r\n    });\r\n\r\n    // Recalculate when facility changes\r\n    $(\"#facilityName\").on(\"change\", function () {\r\n        $(\"#dateAndTime\").trigger(\"change\");\r\n    });\r\n});\r\n<\/script>\r\n"
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.HiddenField",
                    "properties": {
                        "useDefaultWhenEmpty": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "workflowVariable": "",
                        "id": "status",
                        "value": "Pending"
                    }
                }
            ],
            "className": "org.joget.apps.form.model.Column",
            "properties": {"width": "100%"}
        }],
        "className": "org.joget.apps.form.model.Section",
        "properties": {
            "visibilityControl": "",
            "permissionReadonly": "",
            "permission": {
                "className": "",
                "properties": {}
            },
            "label": "Facilities Booking",
            "reverse": "",
            "storeBinder": {
                "className": "",
                "properties": {}
            },
            "visibilityValue": "",
            "regex": "",
            "readonly": "",
            "loadBinder": {
                "className": "",
                "properties": {}
            },
            "comment": "",
            "id": "section1",
            "join": "",
            "readonlyLabel": ""
        }
    }],
    "className": "org.joget.apps.form.model.Form",
    "properties": {
        "noPermissionMessage": "",
        "loadBinder": {
            "className": "org.joget.apps.form.lib.WorkflowFormBinder",
            "properties": {}
        },
        "name": "Residents Facilities Booking Request Form",
        "description": "",
        "postProcessorRunOn": "create",
        "permission": {
            "className": "",
            "properties": {}
        },
        "id": "FacilitiesBookingRequestForm",
        "postProcessor": {
            "className": "",
            "properties": {}
        },
        "storeBinder": {
            "className": "org.joget.apps.form.lib.WorkflowFormBinder",
            "properties": {}
        },
        "tableName": "facilities_book"
    }
}