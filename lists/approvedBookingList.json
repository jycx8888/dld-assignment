{
    "template": {
        "className": "",
        "properties": {}
    },
    "rowActions": [],
    "columns": [
        {
            "style-background-color": "#BEE3FB",
            "filterable": true,
            "hidden": "false",
            "renderHtml": "",
            "style-color": "#000000",
            "format": {
                "className": "",
                "properties": {}
            },
            "header-style-border-color": "#000000",
            "label": "ID",
            "sortable": "false",
            "style-border-color": "#000000",
            "datalist_type": "column",
            "exclude_export": "",
            "name": "id",
            "width": "",
            "headerAlignment": "",
            "action": {
                "className": "",
                "properties": {}
            },
            "style": "",
            "id": "column_1",
            "alignment": ""
        },
        {
            "style-background-color": "#BEE3FB",
            "filterable": true,
            "hidden": "false",
            "renderHtml": "",
            "style-color": "#000000",
            "format": {
                "className": "",
                "properties": {}
            },
            "header-style-border-color": "#000000",
            "label": "Created By Name",
            "sortable": "false",
            "style-border-color": "#000000",
            "datalist_type": "column",
            "exclude_export": "",
            "name": "createdByName",
            "width": "",
            "headerAlignment": "",
            "action": {
                "className": "",
                "properties": {}
            },
            "style": "",
            "id": "column_3",
            "alignment": ""
        },
        {
            "style-background-color": "#BEE3FB",
            "filterable": true,
            "hidden": "false",
            "renderHtml": "",
            "style-color": "#000000",
            "format": {
                "className": "",
                "properties": {}
            },
            "header-style-border-color": "#000000",
            "label": "Approval Status",
            "sortable": "false",
            "style-border-color": "#000000",
            "datalist_type": "column",
            "exclude_export": "",
            "style-text-align": "left",
            "name": "approvalstatus",
            "width": "",
            "headerAlignment": "",
            "action": {
                "className": "",
                "properties": {}
            },
            "style": "",
            "id": "column_0",
            "alignment": ""
        }
    ],
    "pageSize": "0",
    "orderBy": "",
    "description": "",
    "filters": [],
    "pageSizeSelectorOptions": "10,20,30,40,50,100",
    "name": "Approved Booking List",
    "id": "approvedBookingList",
    "binder": {
        "className": "org.joget.apps.datalist.lib.FormRowDataListBinder",
        "properties": {
            "formDefId": "bookingApprovalForm",
            "extraCondition": ""
        }
    },
    "actions": [{
        "className": "org.joget.plugin.enterprise.BeanShellDatalistAction",
        "id": "action_1",
        "properties": {
            "label": "BeanShell",
            "confirmation": "",
            "datalist_type": "action",
            "script": "document.addEventListener('DOMContentLoaded', function() {\r\n    // ... (previous JavaScript code for sidebar, main content, table rows, etc.) ...\r\n\r\n    // --- REVISED EDIT BUTTON STYLING ---\r\n    // Try to find the exact selector for your \"Edit\" button using browser inspector.\r\n    // Common Joget button selectors could be:\r\n    // .btn-primary, .btn-sm (for small buttons), or a specific ID/class if you added one.\r\n    // Based on the image, it looks like a standard Bootstrap button or similar.\r\n    const editButtons = document.querySelectorAll('table .btn.btn-default.btn-xs'); // Example selector from common Joget patterns\r\n    // OR if it's inside a specific column with a class:\r\n    // const editButtons = document.querySelectorAll('.grid-column-actions .btn');\r\n\r\n    // You might also target it if it has specific text content (less reliable but possible):\r\n    // const editButtons = Array.from(document.querySelectorAll('button, a')).filter(el => el.textContent.trim() === 'Edit');\r\n\r\n\r\n    if (editButtons.length > 0) { // Check if any buttons are found\r\n        editButtons.forEach(button => {\r\n            // Ensure the button is visible and has basic styling\r\n            button.style.display = 'inline-block'; // Or 'block' if it should take full width\r\n            button.style.visibility = 'visible';\r\n            button.style.opacity = '1';\r\n            button.style.padding = '5px 10px'; // Give it some padding\r\n            button.style.fontSize = '12px'; // Adjust font size\r\n            button.style.borderRadius = '4px'; // Slightly rounded corners\r\n\r\n            // Apply your desired colors\r\n            button.style.backgroundColor = '#007bff'; // Blue\r\n            button.style.color = '#ffffff'; // White text\r\n            button.style.border = '1px solid #007bff'; // Blue border\r\n\r\n            // Hover effects\r\n            button.addEventListener('mouseover', function() {\r\n                this.style.backgroundColor = '#0056b3';\r\n                this.style.borderColor = '#0056b3';\r\n            });\r\n            button.addEventListener('mouseout', function() {\r\n                this.style.backgroundColor = '#007bff';\r\n                this.style.borderColor = '#007bff';\r\n            });\r\n        });\r\n    } else {\r\n        console.warn(\"No 'Edit' buttons found with the specified selector. Please inspect your page.\");\r\n    }\r\n});"
        }
    }],
    "order": ""
}